Compared to some other document formats, my impression of the the
.ipynb notebook format so far is that it is quite amenable to being
subject to version control. Not only is it a text-based format, but it
is a particularly clean text-based format, with very little in the way
of internal fields to keep track of the state of the GUI, that kind of
thing. Most of the data in the notebook is things that you put there.

This means that, when you use a text-based comparison tool like diff(1)
to see what has changed between two versions of a notebook, most of
what you see will indeed be worth seeing.

There are just a couple of points I found to help keep the notebooks
as clean as possible before committing them to a Git repo:

* Invoke the “Cell → All Output → Clear” menu item. This gets rid of
  cached graphics generated by cell code. No point saving them in the
  repo, when they can be regenerated so easily, and when they could
  be the source of spurious differences.
* Hand-edit the .ipynb file and remove the “signature” entry from the
  “metadata” record. This is a hash computed from the contents of the
  notebook and a user-specific secret key. Since different users will
  have different secret keys, this field would be an ongoing source of
  spurious source-code differences, and nobody except the contributor
  of the last change could validate the resulting signature,
  anyway. So removing it means the notebooks become equally
  untrustworthy to everybody.

I tried using the “Edit → Edit Notebook Metadata” menu item and
removing the signature field that way, but it seems IPython ignores
that, and continues including the signature regardless. Thus, the need
to use a text editor to get rid of it. But watch out for JSON syntax:
JSON doesn’t allow trailing commas!
